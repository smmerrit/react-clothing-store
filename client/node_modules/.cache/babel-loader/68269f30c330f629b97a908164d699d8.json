{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TacoBill\\\\REACT\\\\clothing-store\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport './sign-in.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../button/button.component.jsx';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.props;\n      const {\n        emailSignInStart\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"sign-in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      label: \"email\",\n      value: this.state.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      handleChange: this.handleChange,\n      label: \"password\",\n      value: this.state.password,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      value: \"Submit Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, ' ', \"Sign In with Google\", ' '))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/TacoBill/REACT/clothing-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './sign-in.styles.scss'\r\nimport {connect} from 'react-redux'\r\nimport FormInput from '../form-input/form-input.component.jsx'\r\nimport CustomButton from '../button/button.component.jsx'\r\n\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\r\n\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n\r\n      this.state = { \r\n          email: '',\r\n          password: ''\r\n       }\r\n  }\r\n\r\n\r\n\r\nhandleSubmit = async event =>{\r\n    event.preventDefault();\r\nconst {email, password} = this.props\r\nconst { emailSignInStart} = this.state\r\n\r\nemailSignInStart(email,password)\r\n\r\n\r\n}\r\n\r\n\r\n  handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const {googleSignInStart} = this.props\r\n      return(\r\n          <div className='sign-in'>\r\n              <h2>I already have an account</h2>\r\n              <span>sign-in with your email and password</span>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n            <FormInput name='email' type='email' handleChange={this.handleChange} label=\"email\" value={this.state.email} required/>\r\n       \r\n            <FormInput name='password' type='password' handleChange={this.handleChange} label=\"password\" value={this.state.password} required />\r\n            <div className=\"buttons\">\r\n            <CustomButton type=\"submit\" value=\"Submit Form\" >Sign In</CustomButton>\r\n            <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\r\n              {' '}Sign In with Google{' '}</CustomButton>\r\n            </div>\r\n            </form>\r\n          </div>\r\n      );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch =>({\r\n   googleSignInStart: () => dispatch(googleSignInStart()),\r\n   emailSignInStart: (email, password) => dispatch(emailSignInStart({email,password}))\r\n})\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}