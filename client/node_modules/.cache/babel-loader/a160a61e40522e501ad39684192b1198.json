{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAZ7TNtyCXCgtiZlZMOI4ieEC11RpyEsDs\",\n  authDomain: \"react-online-store-610d22.firebaseapp.com\",\n  databaseURL: \"https://react-online-store-610d22.firebaseio.com\",\n  projectId: \"react-online-store-610d22\",\n  storageBucket: \"react-online-store-610d22.appspot.com\",\n  messagingSenderId: \"959502291095\",\n  appId: \"1:959502291095:web:c8523cbb7d977863a499d2\",\n  measurementId: \"G-62E21YQSKK\"\n};\nexport const createUserProfileDocument = async (userAuth, addtionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //query snapshot object \n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      //create a new document with the afrmetioned properties\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...addtionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshot = collections => {\n  const transformedCollections = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/TacoBill/REACT/clothing-store/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","addtionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshot","collections","transformedCollections","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAZ7TNtyCXCgtiZlZMOI4ieEC11RpyEsDs\",\r\n    authDomain: \"react-online-store-610d22.firebaseapp.com\",\r\n    databaseURL: \"https://react-online-store-610d22.firebaseio.com\",\r\n    projectId: \"react-online-store-610d22\",\r\n    storageBucket: \"react-online-store-610d22.appspot.com\",\r\n    messagingSenderId: \"959502291095\",\r\n    appId: \"1:959502291095:web:c8523cbb7d977863a499d2\",\r\n    measurementId: \"G-62E21YQSKK\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth,addtionalData) =>{\r\n    if(!userAuth) return;\r\n    \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n\r\n    //query snapshot object \r\n    const snapShot = await userRef.get();\r\n\r\n  \r\n\r\n    if(!snapShot.exists){\r\n        const {displayName, email} = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try{\r\n            //create a new document with the afrmetioned properties\r\n            await userRef.set({\r\n                    displayName,\r\n                    email,\r\n                createdAt,\r\n                ...addtionalData\r\n\r\n            })\r\n\r\n        } catch(error){\r\n\r\nconsole.log('error creating user', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n    }\r\n\r\nfirebase.initializeApp(config);\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey)\r\n    const batch = firestore.batch()\r\n    objectsToAdd.forEach(obj =>{\r\n       const newDocRef = collectionRef.doc()\r\n       batch.set(newDocRef, obj) \r\n    })\r\n    return await batch.commit()\r\n}\r\n\r\nexport const convertCollectionsSnapshot = (collections) => {\r\n    const transformedCollections = collections.docs.map(doc =>{\r\n        const { title, items} = doc.data()\r\n        return{\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n\r\n        }\r\n\r\n    })\r\n    return transformedCollections.reduce((accumulator,collection) =>  {\r\n        accumulator[collection.title.toLowerCase()]= collection\r\n        return accumulator },{})\r\n\r\n}\r\n\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n            unsubscribe();\r\n            resolve(userAuth);\r\n        }, reject);\r\n    });\r\n};\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}