{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/TacoBill/REACT/clothing-store/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AAEA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AACA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAd,CAAT;AACC,GALG,CAKF,OAAOC,KAAP,EAAa;AACf,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACC;AACA;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AACxD,MAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AAEK,GAND,CAME,OAAMC,KAAN,EAAY;AACX,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACF;AAEJ;AAED,OAAO,UAAUM,mBAAV,GAA+B;AAClC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACH;AACD,OAAO,UAAUgB,kBAAV,GAA8B;AACjC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAqCR,eAArC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACqB,mBAAD,CAAL,EAA2BrB,IAAI,CAACuB,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects'\r\nimport UserActionTypes from './user.types'\r\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils'\r\n\r\nimport {signInSuccess, signInFailure} from './user.actions'\r\nexport function* signInWithGoogle(){\r\n    try{\r\nconst {user} = yield auth.signInWithPopup(googleProvider)\r\nconst userRef = yield call(createUserProfileDocument, user)\r\nconst userSnapshot = yield userRef.get()\r\nyield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n} catch (error){\r\nyield put(signInFailure(error))\r\n}\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\n    try{\r\nconst { user } = yield auth.signInWithEmailAndPassword(email,password)\r\nconst userRef = yield call(createUserProfileDocument, user)\r\nconst userSnapshot = yield userRef.get()\r\nyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n \r\n    } catch(error){\r\n       yield put(signInFailure(error))\r\n    }\r\n\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail )\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}