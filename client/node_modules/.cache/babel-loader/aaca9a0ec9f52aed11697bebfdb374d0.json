{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess } from './user.actions';\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser;\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(signOut)]);\n}","map":{"version":3,"sources":["C:/Users/TacoBill/REACT/clothing-store/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signOut","error","isUserAuthenticated","userAuth","getSnapshotFromUserAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects'\r\nimport UserActionTypes from './user.types'\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils'\r\n\r\nimport {signInSuccess, signInFailure,signOutFailure,signOutSuccess} from './user.actions'\r\n\r\n\r\n\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield(put(signOutSuccess()))\r\n    } catch(error){\r\n        yield put(signOutFailure(error))\r\n\r\n}}\r\n\r\nexport function* isUserAuthenticated (){\r\n    try {\r\n        const userAuth = yield getCurrentUser\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\nconst {user} = yield auth.signInWithPopup(googleProvider)\r\nyield getSnapshotFromUserAuth(user)\r\n} catch (error){\r\nyield put(signInFailure(error))\r\n}\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\n    try{\r\nconst { user } = yield auth.signInWithEmailAndPassword(email,password)\r\n    yield getSnapshotFromUserAuth(user)\r\n \r\n    } catch(error){\r\n       yield put(signInFailure(error))\r\n    }\r\n\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail )\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n} \r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(signOut)])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}