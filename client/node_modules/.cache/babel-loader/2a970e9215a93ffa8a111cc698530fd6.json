{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAZ7TNtyCXCgtiZlZMOI4ieEC11RpyEsDs\",\n  authDomain: \"react-online-store-610d22.firebaseapp.com\",\n  databaseURL: \"https://react-online-store-610d22.firebaseio.com\",\n  projectId: \"react-online-store-610d22\",\n  storageBucket: \"react-online-store-610d22.appspot.com\",\n  messagingSenderId: \"959502291095\",\n  appId: \"1:959502291095:web:c8523cbb7d977863a499d2\",\n  measurementId: \"G-62E21YQSKK\"\n};\nexport const createUserProfileDocument = async (userAuth, addtionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...addtionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/TacoBill/REACT/clothing-store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","addtionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,2CAFD;AAGXC,EAAAA,WAAW,EAAE,kDAHF;AAIXC,EAAAA,SAAS,EAAE,2BAJA;AAKXC,EAAAA,aAAa,EAAE,uCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAgBC,aAAhB,KAAiC;AACtE,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAGA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACVJ,QAAAA,WADU;AAEVC,QAAAA,KAFU;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAQH,KATD,CASE,OAAMa,KAAN,EAAY;AAEtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACS;AACJ;;AACD,SAAOf,OAAP;AACC,CA1BE;AA4BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AACP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAZ7TNtyCXCgtiZlZMOI4ieEC11RpyEsDs\",\r\n    authDomain: \"react-online-store-610d22.firebaseapp.com\",\r\n    databaseURL: \"https://react-online-store-610d22.firebaseio.com\",\r\n    projectId: \"react-online-store-610d22\",\r\n    storageBucket: \"react-online-store-610d22.appspot.com\",\r\n    messagingSenderId: \"959502291095\",\r\n    appId: \"1:959502291095:web:c8523cbb7d977863a499d2\",\r\n    measurementId: \"G-62E21YQSKK\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth,addtionalData) =>{\r\n    if(!userAuth) return;\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n\r\n    const snapShot = await userRef.get();\r\n  \r\n\r\n    if(!snapShot.exists){\r\n        const {displayName, email} = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try{\r\n            await userRef.set({\r\n                    displayName,\r\n                    email,\r\n                createdAt,\r\n                ...addtionalData\r\n\r\n            })\r\n\r\n        } catch(error){\r\n\r\nconsole.log('error creating user', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n    }\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt: 'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}